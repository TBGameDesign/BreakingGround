<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_steveBody</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-50</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Init Player

collectWater=0
dump = 0;
fill = 0;
fin = 0;
frm = 0;
frm_spd=0.5

// legs
    legsfrm = 0
    legsfrm_spd = 0
//0 -idle
//1 -jump
//2-6 walk

//Movement
spd = 8;
acc = 2;
hspd = 0;
vspd = 0;
grav = 2;
gs = 200;


//kayboard variables
left = 0;
right = 0;
up = 0;
collect = 0;
pour = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Platform Movement

right = keyboard_check(vk_right);
left = keyboard_check(vk_left);
up = keyboard_check(vk_up);
collect = keyboard_check(vk_space);
pour = keyboard_check(vk_alt);

if fin=0 {    
///Horizontal movement and collisions
    if ( right || left ) {       
        hspd += (right - left) * acc;
        if (hspd &gt; spd) hspd = spd;
        if (hspd &lt; -spd) hspd = -spd;         
    } else {
        if ( hspd != 0 ) {
            hspd -= sign(hspd);
        }
    }
    
//If Going to the right (combined collision scripts into movement)
    if ( right ) {
        if ( place_meeting(x+hspd, y, obj_cave ) ) {
            while (!place_meeting(x+1, y, obj_cave ) ) {
                x += 1;
            }
            hspd = 0;
        }
        if ( place_meeting(x+hspd, y, obj_cavebot_right ) ) {
            x += 2;
            y -= 4;
            hspd = 0;
        }
            x += hspd;
            image_xscale = 1;    
        }
    
//If Going to the left
    if ( left ) {
        if (place_meeting(x+hspd, y, obj_cave ) ) {
            while (!place_meeting(x-1, y, obj_cave ) ) {
                x -= 1;
            }
            hspd = 0;
        }
        if ( place_meeting(x+hspd, y, obj_cavebot_left ) ) {
            x -= 2;
            y -= 4;
            hspd = 0;
        }
            x += hspd;
            image_xscale = -1;    
        }
        
/// vertical colisions and movement
    
//Vertical Movement
    if ( place_meeting(x, y+3, obj_cave ) || place_meeting(x, y+3, obj_slope ) ) {
        if ( up ) {
            vspd = -24+fill;
        } 
    } else {
        vspd += 2;
    }  
    
//Vertical Collisions
    if (place_meeting(x, y+vspd, obj_cave)) {
        while (!place_meeting(x, y+sign(vspd), obj_cave ) ) {
            y += sign(vspd);
        }
        vspd = 0;
    }
    if (place_meeting(x, y+vspd, obj_slope) ) {
        while (!place_meeting(x, y+sign(vspd), obj_slope ) ) {
            y += sign(vspd);
        }
        vspd = 0;
    }    
    y += vspd;
  
//Handle ALT
    if ( pour ) {
        if ( place_meeting(x,y,obj_tree) ) {
            if ( fill &gt; 0 ) {
                fill -= 1
                with ( obj_tree ) {
                    curr_waterlevel+=3;
                }
            }   
        } else {
            if ( fill &gt; 0 ) {
                fill -= 1;
                repeat(10) {
                    instance_create(x, y-15, obj_pour)
                }
            }
        }
    }
        
// Handle Spacebar
    if ( collect ) {
        collectWater = 1;
    } else {
        collectWater = 0;
    }

//Handle all Animations

    if ( !right &amp;&amp; !left &amp;&amp; !up &amp;&amp; !collect ) {
        legsfrm=0
        legsfrm_spd=0.5
        if frm&gt;6 frm=0
        if 1=round(random(10)) &amp;&amp; frm=6 frm=7
        frm_spd=0.25
    }
        
    if ( right || left ) {
    
        if ( !collect ) {
            frm_spd=0
            frm=8
        }
        if legsfrm&lt;2 legsfrm=2
        if legsfrm&gt;6 legsfrm=2
        legsfrm_spd=0.25
    }    
        
    if ( collect ) {
        frm_spd=1
        if frm&lt;7 frm=7
        if frm&gt;10 frm=10
        legsfrm_spd=0
        legsfrm=1
    }

    if ( up ) {
        legsfrm_spd=0
        legsfrm=1
        frm_spd=0
        frm=9
    }
        
    if ( pour ) {
        if ( !sound_isplaying(sou_emptyHat) &amp;&amp; fill &gt; 0 ) {
            sound_play(sou_emptyHat);
        }   
        legsfrm=0
        legsfrm_spd=0
        frm_spd=0.25
        if frm&lt;11 frm=11
        if frm&gt;12 frm=11
    }

}//end of if fin=0 spd) hspd = spd;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>612</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if_variable</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>fin</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>1</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>612</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if_variable</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>point_distance(x,y,obj_tree.x,obj_tree.y)</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>100</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>1</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>422</id>
        <kind>1</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>105</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_move_point</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>366</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>-128</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>2</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>424</id>
        <kind>2</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>612</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if_variable</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>y</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>-100</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>1</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>331</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_restart_game</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
    <event eventtype="4" ename="obj_water">
      <action>
        <libid>1</libid>
        <id>211</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_sound</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>6</kind>
            <sound>sou_dripCollect</sound>
          </argument>
          <argument>
            <kind>3</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if ( collectWater = 1 ) {
    ///Add fill level
    if ( fill &lt; 9 )
    fill += 1;
  
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>203</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_kill_object</functionname>
        <codestring></codestring>
        <whoName>other</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite_ext(spr_steveLegs,legsfrm,x,y,image_xscale,1,0,c_white,1)
draw_sprite_ext(spr_steveBody,frm,x,y,image_xscale,1,0,c_white,1)
frm+=frm_spd
legsfrm+=legsfrm_spd


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
